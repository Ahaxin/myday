version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: myday
      POSTGRES_PASSWORD: myday
      POSTGRES_DB: myday
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Console

  minio-setup:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >-
      /bin/sh -c "
      until (/usr/bin/mc alias set local http://minio:9000 minioadmin minioadmin) do echo '...waiting for minio...' && sleep 2; done; \
      /usr/bin/mc mb -p local/myday-dev || true; \
      /usr/bin/mc anonymous set download local/myday-dev; \
      echo 'MinIO bucket ready.'; \
      sleep 1; \
      exit 0;"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      MYDAY_SECRET_KEY: change-me-dev
      MYDAY_DATABASE_URL: postgresql+psycopg2://myday:myday@db:5432/myday
      MYDAY_STORAGE_BACKEND: s3
      MYDAY_S3_ENDPOINT_URL: http://minio:9000
      MYDAY_S3_REGION: us-east-1
      MYDAY_S3_ACCESS_KEY_ID: minioadmin
      MYDAY_S3_SECRET_ACCESS_KEY: minioadmin
      MYDAY_S3_BUCKET: myday-dev
      # Optionally serve public URLs via MinIO endpoint
      # MYDAY_S3_PUBLIC_BASE_URL: http://localhost:9000/myday-dev
      MYDAY_VERIFY_UPLOADS: "true"
      MYDAY_BROKER_URL: redis://redis:6379/0
      MYDAY_RESULT_BACKEND: redis://redis:6379/1
      MYDAY_AUTO_ENQUEUE_TRANSCRIPTION: "false"
    depends_on:
      - db
      - minio-setup
    ports:
      - "8000:8000"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      - db
      - redis
      - minio-setup
    environment:
      MYDAY_SECRET_KEY: change-me-dev
      MYDAY_DATABASE_URL: postgresql+psycopg2://myday:myday@db:5432/myday
      MYDAY_STORAGE_BACKEND: s3
      MYDAY_S3_ENDPOINT_URL: http://minio:9000
      MYDAY_S3_REGION: us-east-1
      MYDAY_S3_ACCESS_KEY_ID: minioadmin
      MYDAY_S3_SECRET_ACCESS_KEY: minioadmin
      MYDAY_S3_BUCKET: myday-dev
      MYDAY_VERIFY_UPLOADS: "true"
      MYDAY_BROKER_URL: redis://redis:6379/0
      MYDAY_RESULT_BACKEND: redis://redis:6379/1
      MYDAY_TRANSCRIPTION_BACKEND: whisper
    command: ["celery", "-A", "server.app.tasks:celery_app", "worker", "-l", "info"]

  # Optional GPU worker for high-throughput Whisper (requires NVIDIA runtime)
  worker-gpu:
    build:
      context: .
      dockerfile: Dockerfile.worker.gpu
    depends_on:
      - db
      - redis
      - minio-setup
    environment:
      MYDAY_SECRET_KEY: change-me-dev
      MYDAY_DATABASE_URL: postgresql+psycopg2://myday:myday@db:5432/myday
      MYDAY_STORAGE_BACKEND: s3
      MYDAY_S3_ENDPOINT_URL: http://minio:9000
      MYDAY_S3_REGION: us-east-1
      MYDAY_S3_ACCESS_KEY_ID: minioadmin
      MYDAY_S3_SECRET_ACCESS_KEY: minioadmin
      MYDAY_S3_BUCKET: myday-dev
      MYDAY_VERIFY_UPLOADS: "true"
      MYDAY_BROKER_URL: redis://redis:6379/0
      MYDAY_RESULT_BACKEND: redis://redis:6379/1
      MYDAY_TRANSCRIPTION_BACKEND: whisper
      MYDAY_WHISPER_DEVICE: cuda
    gpus: all
    command: ["celery", "-A", "server.app.tasks:celery_app", "worker", "-l", "info"]

volumes:
  pg_data:
  minio_data:
